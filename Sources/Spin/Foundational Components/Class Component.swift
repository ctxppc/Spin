// Spin © 2019–2020 Constantino Tsarouhas

/// A component specifying a number of classes on the outermost elements generated by the attribute component's inner component.
private struct ClassComponent<InnerComponent : Component> : Component {
	
	/// The name of the classes.
	private(set) var classNames: Set<String>
	
	/// The component on which the class is associated.
	let component: InnerComponent
	
	// See protocol.
	var body: some Component {
		component
	}
	
	// See protocol.
	func render(into renderer: inout Renderer) {
		renderer.additionalClassNames.formUnion(classNames)
		renderer.addComponent(component)
	}
	
	// See protocol.
	func member(of classNames: String...) -> some Component {
		var copy = self
		copy.classNames.formUnion(classNames)
		return copy
	}
	
}

extension Component {
	
	/// Adds all direct descendant elements generated by `self` to given class.
	public func member<Class : RawRepresentable>(of c: Class) -> some Component where Class.RawValue == String {
		member(of: c.rawValue)
	}
	
	/// Adds all direct descendant elements generated by `self` to given classes.
	public func member(of classNames: String...) -> some Component {
		ClassComponent(classNames: .init(classNames), component: self)
	}
	
}
